if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'christoomey/vim-run-interactive'
" Plug 'https://github.com/adelarsq/vim-</Empty>matchit'
"Plug 'kchmck/vim-coffee-script'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'pbrisbin/vim-mkdir'
Plug 'scrooloose/nerdtree'
"Plug 'slim-template/vim-slim'
"Plug 'thoughtbot/vim-rspec'
"Plug 'tpope/vim-bundler'
"Plug 'tpope/vim-endwise'
"Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
"Plug 'tpope/vim-rails'
"Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
"Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
Plug 'hail2u/vim-css3-syntax'
Plug 'sheerun/vim-polyglot'
"Plug 'rizzatti/dash.vim'
"Plug 'lambdatoast/elm.vim'
"Plug 'pangloss/vim-javascript'
"Plug 'gavocanov/vim-js-indent'
Plug 'itchyny/lightline.vim'
Plug 'airblade/vim-gitgutter'
" == JavaScript syntax highlighting ==
Plug 'pangloss/vim-javascript', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'mxw/vim-jsx', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'othree/yajs.vim', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'othree/es.next.syntax.vim', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'othree/javascript-libraries-syntax.vim', { 'for': ['javascript', 'javascript.jsx'] }
"Plug 'flowtype/vim-flow', { 'for': ['javascript', 'javascript.jsx'] }
Plug 'epilande/vim-es2015-snippets'
Plug 'epilande/vim-react-snippets'
Plug 'SirVer/ultisnips'
Plug 'heavenshell/vim-jsdoc'
Plug 'chooh/brightscript.vim'

"if g:has_async
"  Plug 'w0rp/ale'
"endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
